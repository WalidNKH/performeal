name: Flutter Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      # Installation de Flutter
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'

      # Installation Supabase CLI
      - name: Install Supabase CLI
        run: |
          wget -q https://github.com/supabase/cli/releases/download/v2.13.4/supabase_linux_amd64.tar.gz
          tar -xzf supabase_linux_amd64.tar.gz
          sudo mv supabase /usr/local/bin/
          sudo chmod +x /usr/local/bin/supabase

      # Configuration du projet Supabase
      - name: Create Supabase directory structure
        run: |
          mkdir -p supabase/migrations
          mkdir -p supabase/seeds
          cp migrations/* supabase/migrations/
          cp seeds/* supabase/seeds/
          cp config.toml supabase/config.toml

      # Link du projet Supabase
      - name: Link Supabase project
        run: |
          supabase link --password ${{ secrets.SUPABASE_DB_PASSWORD }} --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}

      # Démarrage de Supabase et préparation de la base
      - name: Start Supabase and setup database
        run: |
          supabase start --workdir .
          supabase db reset --workdir .

      # Application des migrations
      - name: Apply migrations
        run: |
          supabase migration up --workdir .

      # Installation des dépendances Flutter
      - name: Get Flutter dependencies
        run: flutter pub get

      # Exécution des tests Flutter
      - name: Run Flutter tests
        run: flutter test

      # Arrêt de Supabase
      - name: Stop Supabase
        if: always()
        run: supabase stop

      # Notification par email en cas d'échec
      - name: Send email on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ssl0.ovh.net
          server_port: 465
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "❌ Tests failed on Flutter App"
          body: "Les tests ont échoué sur la branche ${{ github.ref }}. Voir les logs : ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{github.run_id }}"
          to: bastien.metais@gmail.com
          from: GitHub Actions <${{ secrets.SMTP_USERNAME }}>